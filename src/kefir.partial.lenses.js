// THIS FILE IS GENERATED

import * as L from 'partial.lenses'
import {liftFOF} from 'kefir.combines'

export const Constant = liftFOF(L.Constant)
export const Identity = liftFOF(L.Identity)
export const add = liftFOF(L.add)
export const all = liftFOF(L.all)
export const and = liftFOF(L.and)
export const any = liftFOF(L.any)
export const append = liftFOF(L.append)
export const array = liftFOF(L.array)
export const assign = liftFOF(L.assign)
export const assignOp = liftFOF(L.assignOp)
export const branch = liftFOF(L.branch)
export const branchOr = liftFOF(L.branchOr)
export const branches = liftFOF(L.branches)
export const chain = liftFOF(L.chain)
export const children = liftFOF(L.children)
export const choice = liftFOF(L.choice)
export const choices = liftFOF(L.choices)
export const choose = liftFOF(L.choose)
export const collect = liftFOF(L.collect)
export const collectAs = liftFOF(L.collectAs)
export const complement = liftFOF(L.complement)
export const compose = liftFOF(L.compose)
export const concat = liftFOF(L.concat)
export const concatAs = liftFOF(L.concatAs)
export const cond = liftFOF(L.cond)
export const condOf = liftFOF(L.condOf)
export const count = liftFOF(L.count)
export const countIf = liftFOF(L.countIf)
export const counts = liftFOF(L.counts)
export const countsAs = liftFOF(L.countsAs)
export const defaults = liftFOF(L.defaults)
export const define = liftFOF(L.define)
export const divide = liftFOF(L.divide)
export const dropPrefix = liftFOF(L.dropPrefix)
export const dropSuffix = liftFOF(L.dropSuffix)
export const elems = liftFOF(L.elems)
export const entries = liftFOF(L.entries)
export const filter = liftFOF(L.filter)
export const find = liftFOF(L.find)
export const findWith = liftFOF(L.findWith)
export const first = liftFOF(L.first)
export const flat = liftFOF(L.flat)
export const flatten = liftFOF(L.flatten)
export const foldTraversalLens = liftFOF(L.foldTraversalLens)
export const foldl = liftFOF(L.foldl)
export const foldr = liftFOF(L.foldr)
export const forEach = liftFOF(L.forEach)
export const forEachWith = liftFOF(L.forEachWith)
export const get = liftFOF(L.get)
export const getInverse = liftFOF(L.getInverse)
export const identity = liftFOF(L.identity)
export const ifElse = liftFOF(L.ifElse)
export const iftes = liftFOF(L.iftes)
export const index = liftFOF(L.index)
export const indexed = liftFOF(L.indexed)
export const inverse = liftFOF(L.inverse)
export const is = liftFOF(L.is)
export const isDefined = liftFOF(L.isDefined)
export const isEmpty = liftFOF(L.isEmpty)
export const iso = liftFOF(L.iso)
export const join = liftFOF(L.join)
export const joinAs = liftFOF(L.joinAs)
export const json = liftFOF(L.json)
export const keyed = liftFOF(L.keyed)
export const keys = liftFOF(L.keys)
export const last = liftFOF(L.last)
export const lazy = liftFOF(L.lazy)
export const leafs = liftFOF(L.leafs)
export const lens = liftFOF(L.lens)
export const log = liftFOF(L.log)
export const matches = liftFOF(L.matches)
export const maximum = liftFOF(L.maximum)
export const maximumBy = liftFOF(L.maximumBy)
export const mean = liftFOF(L.mean)
export const meanAs = liftFOF(L.meanAs)
export const minimum = liftFOF(L.minimum)
export const minimumBy = liftFOF(L.minimumBy)
export const modify = liftFOF(L.modify)
export const modifyOp = liftFOF(L.modifyOp)
export const multiply = liftFOF(L.multiply)
export const negate = liftFOF(L.negate)
export const none = liftFOF(L.none)
export const normalize = liftFOF(L.normalize)
export const optional = liftFOF(L.optional)
export const or = liftFOF(L.or)
export const orElse = liftFOF(L.orElse)
export const pick = liftFOF(L.pick)
export const pickIn = liftFOF(L.pickIn)
export const pointer = liftFOF(L.pointer)
export const prefix = liftFOF(L.prefix)
export const product = liftFOF(L.product)
export const productAs = liftFOF(L.productAs)
export const prop = liftFOF(L.prop)
export const props = liftFOF(L.props)
export const propsOf = liftFOF(L.propsOf)
export const query = liftFOF(L.query)
export const removable = liftFOF(L.removable)
export const remove = liftFOF(L.remove)
export const removeOp = liftFOF(L.removeOp)
export const replace = liftFOF(L.replace)
export const replaces = liftFOF(L.replaces)
export const required = liftFOF(L.required)
export const reread = liftFOF(L.reread)
export const reverse = liftFOF(L.reverse)
export const rewrite = liftFOF(L.rewrite)
export const satisfying = liftFOF(L.satisfying)
export const seemsArrayLike = liftFOF(L.seemsArrayLike)
export const select = liftFOF(L.select)
export const selectAs = liftFOF(L.selectAs)
export const seq = liftFOF(L.seq)
export const set = liftFOF(L.set)
export const setOp = liftFOF(L.setOp)
export const setter = liftFOF(L.setter)
export const singleton = liftFOF(L.singleton)
export const slice = liftFOF(L.slice)
export const split = liftFOF(L.split)
export const subtract = liftFOF(L.subtract)
export const suffix = liftFOF(L.suffix)
export const sum = liftFOF(L.sum)
export const sumAs = liftFOF(L.sumAs)
export const toFunction = liftFOF(L.toFunction)
export const transform = liftFOF(L.transform)
export const traverse = liftFOF(L.traverse)
export const uncouple = liftFOF(L.uncouple)
export const unless = liftFOF(L.unless)
export const uri = liftFOF(L.uri)
export const uriComponent = liftFOF(L.uriComponent)
export const valueOr = liftFOF(L.valueOr)
export const values = liftFOF(L.values)
export const when = liftFOF(L.when)
export const zero = liftFOF(L.zero)
