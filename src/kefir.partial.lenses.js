// THIS FILE IS GENERATED

import * as L from 'partial.lenses'
import {liftRec} from 'kefir.combines'

export const Constant = liftRec(L.Constant)
export const Identity = liftRec(L.Identity)
export const all = liftRec(L.all)
export const and = liftRec(L.and)
export const any = liftRec(L.any)
export const append = liftRec(L.append)
export const array = liftRec(L.array)
export const assign = liftRec(L.assign)
export const assignOp = liftRec(L.assignOp)
export const branch = liftRec(L.branch)
export const branchOr = liftRec(L.branchOr)
export const branches = liftRec(L.branches)
export const chain = liftRec(L.chain)
export const children = liftRec(L.children)
export const choice = liftRec(L.choice)
export const choices = liftRec(L.choices)
export const choose = liftRec(L.choose)
export const collect = liftRec(L.collect)
export const collectAs = liftRec(L.collectAs)
export const complement = liftRec(L.complement)
export const compose = liftRec(L.compose)
export const concat = liftRec(L.concat)
export const concatAs = liftRec(L.concatAs)
export const cond = liftRec(L.cond)
export const condOf = liftRec(L.condOf)
export const count = liftRec(L.count)
export const countIf = liftRec(L.countIf)
export const counts = liftRec(L.counts)
export const countsAs = liftRec(L.countsAs)
export const defaults = liftRec(L.defaults)
export const define = liftRec(L.define)
export const dropPrefix = liftRec(L.dropPrefix)
export const dropSuffix = liftRec(L.dropSuffix)
export const elems = liftRec(L.elems)
export const entries = liftRec(L.entries)
export const filter = liftRec(L.filter)
export const find = liftRec(L.find)
export const findWith = liftRec(L.findWith)
export const first = liftRec(L.first)
export const flat = liftRec(L.flat)
export const flatten = liftRec(L.flatten)
export const foldTraversalLens = liftRec(L.foldTraversalLens)
export const foldl = liftRec(L.foldl)
export const foldr = liftRec(L.foldr)
export const forEach = liftRec(L.forEach)
export const forEachWith = liftRec(L.forEachWith)
export const get = liftRec(L.get)
export const getInverse = liftRec(L.getInverse)
export const identity = liftRec(L.identity)
export const ifElse = liftRec(L.ifElse)
export const iftes = liftRec(L.iftes)
export const index = liftRec(L.index)
export const indexed = liftRec(L.indexed)
export const inverse = liftRec(L.inverse)
export const is = liftRec(L.is)
export const isDefined = liftRec(L.isDefined)
export const isEmpty = liftRec(L.isEmpty)
export const iso = liftRec(L.iso)
export const join = liftRec(L.join)
export const joinAs = liftRec(L.joinAs)
export const json = liftRec(L.json)
export const keyed = liftRec(L.keyed)
export const keys = liftRec(L.keys)
export const last = liftRec(L.last)
export const lazy = liftRec(L.lazy)
export const leafs = liftRec(L.leafs)
export const lens = liftRec(L.lens)
export const log = liftRec(L.log)
export const matches = liftRec(L.matches)
export const maximum = liftRec(L.maximum)
export const maximumBy = liftRec(L.maximumBy)
export const mean = liftRec(L.mean)
export const meanAs = liftRec(L.meanAs)
export const minimum = liftRec(L.minimum)
export const minimumBy = liftRec(L.minimumBy)
export const modify = liftRec(L.modify)
export const modifyOp = liftRec(L.modifyOp)
export const none = liftRec(L.none)
export const normalize = liftRec(L.normalize)
export const optional = liftRec(L.optional)
export const or = liftRec(L.or)
export const orElse = liftRec(L.orElse)
export const pick = liftRec(L.pick)
export const pickIn = liftRec(L.pickIn)
export const pointer = liftRec(L.pointer)
export const prefix = liftRec(L.prefix)
export const product = liftRec(L.product)
export const productAs = liftRec(L.productAs)
export const prop = liftRec(L.prop)
export const props = liftRec(L.props)
export const propsOf = liftRec(L.propsOf)
export const query = liftRec(L.query)
export const removable = liftRec(L.removable)
export const remove = liftRec(L.remove)
export const removeOp = liftRec(L.removeOp)
export const replace = liftRec(L.replace)
export const replaces = liftRec(L.replaces)
export const required = liftRec(L.required)
export const reread = liftRec(L.reread)
export const reverse = liftRec(L.reverse)
export const rewrite = liftRec(L.rewrite)
export const satisfying = liftRec(L.satisfying)
export const seemsArrayLike = liftRec(L.seemsArrayLike)
export const select = liftRec(L.select)
export const selectAs = liftRec(L.selectAs)
export const seq = liftRec(L.seq)
export const set = liftRec(L.set)
export const setOp = liftRec(L.setOp)
export const setter = liftRec(L.setter)
export const singleton = liftRec(L.singleton)
export const slice = liftRec(L.slice)
export const split = liftRec(L.split)
export const suffix = liftRec(L.suffix)
export const sum = liftRec(L.sum)
export const sumAs = liftRec(L.sumAs)
export const toFunction = liftRec(L.toFunction)
export const transform = liftRec(L.transform)
export const traverse = liftRec(L.traverse)
export const uncouple = liftRec(L.uncouple)
export const unless = liftRec(L.unless)
export const uri = liftRec(L.uri)
export const uriComponent = liftRec(L.uriComponent)
export const valueOr = liftRec(L.valueOr)
export const values = liftRec(L.values)
export const when = liftRec(L.when)
export const zero = liftRec(L.zero)
